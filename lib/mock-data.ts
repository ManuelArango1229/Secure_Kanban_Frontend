// Mock data for development before database integration
import type { Project, Risk, Profile } from "./types"

export const mockUser: Profile = {
  id: "1",
  email: "demo@securekanban.com",
  full_name: "Demo User",
  role: "admin",
  created_at: new Date().toISOString(),
  updated_at: new Date().toISOString(),
}

export const mockProjects: Project[] = [
  {
    id: "1",
    name: "E-Commerce Platform",
    description: "Security assessment for our main e-commerce application",
    owner_id: "1",
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
  },
  {
    id: "2",
    name: "Mobile Banking App",
    description: "Risk management for mobile banking application",
    owner_id: "1",
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
  },
]

export const mockRisks: Risk[] = [
  {
    id: "1",
    project_id: "1",
    title: "SQL Injection in Login Form",
    description:
      "The login form is vulnerable to SQL injection attacks. User input is not properly sanitized before being used in database queries.",
    severity: "critical",
    status: "identified",
    cvss_score: 9.8,
    cwe_id: "CWE-89",
    affected_component: "Authentication Module",
    source_tool: "owasp",
    position: 0,
    created_by: "1",
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
  },
  {
    id: "2",
    project_id: "1",
    title: "Missing CSRF Protection",
    description:
      "Critical endpoints lack CSRF token validation, allowing potential cross-site request forgery attacks.",
    severity: "high",
    status: "in_progress",
    cvss_score: 8.1,
    cwe_id: "CWE-352",
    affected_component: "Payment Gateway",
    mitigation_plan: "Implement CSRF tokens for all state-changing operations",
    assigned_to: "1",
    source_tool: "owasp",
    position: 0,
    created_by: "1",
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
  },
  {
    id: "3",
    project_id: "1",
    title: "Weak Password Policy",
    description: "Current password policy allows weak passwords (minimum 6 characters, no complexity requirements).",
    severity: "medium",
    status: "identified",
    cvss_score: 5.3,
    cwe_id: "CWE-521",
    affected_component: "User Management",
    source_tool: "bandit",
    position: 1,
    created_by: "1",
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
  },
  {
    id: "4",
    project_id: "1",
    title: "Outdated Dependencies",
    description: "Several npm packages are using outdated versions with known vulnerabilities.",
    severity: "medium",
    status: "mitigated",
    cvss_score: 6.5,
    cwe_id: "CWE-1104",
    affected_component: "Frontend Dependencies",
    mitigation_plan: "Updated all dependencies to latest secure versions",
    source_tool: "dependency_track",
    position: 0,
    created_by: "1",
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
  },
  {
    id: "5",
    project_id: "1",
    title: "Container Image Vulnerabilities",
    description: "Base Docker image contains 15 known CVEs including critical vulnerabilities.",
    severity: "high",
    status: "identified",
    cvss_score: 7.8,
    cwe_id: "CWE-1395",
    affected_component: "Docker Base Image",
    source_tool: "trivy",
    position: 2,
    created_by: "1",
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
  },
  {
    id: "6",
    project_id: "1",
    title: "Hardcoded API Keys",
    description: "Found hardcoded API keys in configuration files.",
    severity: "critical",
    status: "in_progress",
    cvss_score: 9.1,
    cwe_id: "CWE-798",
    affected_component: "Configuration",
    source_tool: "bandit",
    position: 1,
    created_by: "1",
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
  },
]
